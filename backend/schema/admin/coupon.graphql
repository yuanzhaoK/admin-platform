# 优惠券管理 GraphQL Schema


enum CouponType {
  general
  member_exclusive
  new_user
  birthday
  activity
}

enum DiscountType {
  percentage
  fixed_amount
  free_shipping
  fixed
}

enum CouponStatus {
  active
  inactive
  expired
  used_up
}

type Coupon {
  id: String!
  name: String!
  description: String
  code: String!
  type: CouponType!
  discount_type: DiscountType!
  discount_value: Float!
  min_amount: Float
  max_discount: Float
  total_quantity: Int
  used_quantity: Int!
  per_user_limit: Int
  status: CouponStatus!
  start_time: String!
  end_time: String!
  applicable_products: [String!]
  applicable_categories: [String!]
  applicable_brands: [String!]
  applicable_member_levels: [String!]
}

type CouponUsage {
  id: String!
  coupon_id: String!
  coupon: Coupon!
  user_id: String!
  order_id: String
  discount_amount: Float!
  used_time: String!
}

type CouponsResponse {
  items: [Coupon!]!
  pagination: PaginationInfo!
}

type CouponUsagesResponse {
  items: [CouponUsage!]!
  pagination: PaginationInfo!
}

type CouponStats {
  total: Int!
  active: Int!
  expired: Int!
  used_up: Int!
  totalUsage: Int!
  totalDiscount: Float!
  typeDistribution: JSON!
  usageThisMonth: Int!
}

input CouponQueryInput {
  page: Int
  perPage: Int
  search: String
  type: CouponType
  status: CouponStatus
  discount_type: DiscountType
  start_date: String
  end_date: String
  sortBy: String
  sortOrder: SortOrder
}

input CouponInput {
  name: String!
  description: String
  code: String!
  type: CouponType!
  discount_type: DiscountType!
  discount_value: Float!
  min_amount: Float
  max_discount: Float
  total_quantity: Int
  per_user_limit: Int
  status: CouponStatus!
  start_time: String!
  end_time: String!
  applicable_products: [String!]
  applicable_categories: [String!]
  applicable_brands: [String!]
  applicable_member_levels: [String!]
}

input CouponUpdateInput {
  name: String
  description: String
  code: String
  type: CouponType
  discount_type: DiscountType
  discount_value: Float
  min_amount: Float
  max_discount: Float
  total_quantity: Int
  per_user_limit: Int
  status: CouponStatus
  start_time: String
  end_time: String
  applicable_products: [String!]
  applicable_categories: [String!]
  applicable_brands: [String!]
  applicable_member_levels: [String!]
}

input CouponUsageQueryInput {
  page: Int
  perPage: Int
  coupon_id: String
  user_id: String
  order_id: String
  used_date_start: String
  used_date_end: String
  sortBy: String
  sortOrder: SortOrder
}

extend type Query {
  coupons(input: CouponQueryInput): CouponsResponse!
  coupon(id: String!): Coupon
  couponUsages(input: CouponUsageQueryInput): CouponUsagesResponse!
  couponStats: CouponStats!
  validateCouponCode(code: String!): Coupon
}

extend type Mutation {
  createCoupon(input: CouponInput!): Coupon!
  updateCoupon(id: String!, input: CouponUpdateInput!): Coupon!
  deleteCoupon(id: String!): Boolean!
  batchDeleteCoupons(ids: [String!]!): BatchOperationResult!
  
  generateCouponCodes(template: String!, count: Int!): [String!]!
  batchCreateCoupons(input: CouponInput!, codes: [String!]!): BatchOperationResult!
} 